version: '3'

services:
  nginx:
    image: nginx:1.13
    ports:
      - 80:80
    restart: always
    volumes:
      - ./devops/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./api/api/static:/api/static
    depends_on:
      - web

  postgres:
    restart: always
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"

  web:
    image: registry.gitlab.com/<USERNAME>/<REPOSITORY_NAME>:latest
    build:
      context: .
    container_name: web
    command: bash -c 'python manage.py migrate --noinput && python manage.py collectstatic --noinput && gunicorn api.wsgi:application -w 2 -b :8000 --capture-output --log-level=info'
    volumes:
      - ./api:/app/api
      - ./api/api/static:/api/static
      - ./api/api/media:/api/media/
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    links:
      - rabbit
      - postgres
    env_file: .env

  rabbit:
    image: rabbitmq:3.7-management
    hostname: "rabbit"
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
    ports:
      - "15672:15672"
      - "5672:5672"

  celery:
    image: registry.gitlab.com/<USERNAME>/<REPOSITORY_NAME>:latest
    build:
      context: .
    container_name: cl01
    env_file: .env
    command: celery -A api.celery:app worker -B --loglevel=debug --purge
    volumes:
      - ./api:/app/api
      - ./api/api/static:/api/static
      - ./api/api/media:/api/media/
    depends_on:
      - rabbit
      - web
      - postgres
    links:
      - rabbit
      - postgres
